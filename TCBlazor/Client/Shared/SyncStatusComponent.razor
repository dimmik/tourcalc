@using TCalcCore.Engine
@inject TourcalcEngine engine


@if (tour != null && UnsyncedItemNumber > 0)
{
    <span style="cursor:pointer;color:black;background-color: lightpink" @onclick="DoSync">
        @UnsyncedItemNumber
    </span>
} else
{
    <span></span>
}

@code {

    private Tour? tour = null;

    protected override async Task OnInitializedAsync()
    {
        //        tcGlobal.OnChange += () => { _ = OnUpdatedAsync(); }; // WHY?..
        engine.onTourLoaded += (t, a, aa) => { tour = t; StateHasChanged(); return Task.CompletedTask; };
        engine.onTourListLoaded += (t, a, aa) => { tour = null; StateHasChanged(); return Task.CompletedTask; };
        engine.DataSvc.OnServerQueueStored += OnUpdatedAsync;

        /*timer = new System.Threading.Timer(async (object? stateInfo) =>
        {
            await DoSync();
            StateHasChanged();
        }, new System.Threading.AutoResetEvent(false), 20000, 20000);*/

        await OnUpdatedAsync();
    }

    private int UnsyncedItemNumber = 0;
    private async Task OnUpdatedAsync()
    {
        UnsyncedItemNumber = await engine.DataSync.CountOfUnsyncedOperations(tour?.Id ?? "n_a");
        StateHasChanged();
    }
    private async Task DoSync()
    {
        await engine.DataSync.Sync(tour?.Id ?? "n_a");
    }

}
