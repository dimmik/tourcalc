@page "/goto/{transientAccessCode}/{tid}"
@inject AuthSvc auth

@using TCBlazor.Client.Storage
@using TCalcCore.Storage
@using TCalcCore.Network


@inject TCDataService dataSvc
@inject ITourcalcLocalStorage ts

@inject NavigationManager NavManager


<h3>Redirecting...</h3>

@code {
    [Parameter]
    public string? transientAccessCode {get; set;}
    [Parameter]
    public string? tid {get; set;}
    protected override async Task OnInitializedAsync()
    {
        //await dataSvc.GetAndStoreToken("code", transientAccessCode);
        await auth.LogIn("code", transientAccessCode);
        // now try to get a tour
        var tt = await dataSvc.LoadTourBare(tid, (a, aa, aaa) => { return Task.CompletedTask; }, forceLoadFromServer: true);
        if (tt == null)
        {
            await dataSvc.GetAndStoreTokenForCodeMd5(transientAccessCode);
            await auth.PickUpAuthInfo();
        }
        var settings = (await ts.GetUISettings()).val;
        var url = settings.Default_Tour_Page_Is_Add_Spending ? $"/tour/{tid}/spending/add/": $"/tour/{tid}";
        NavManager.NavigateTo(url);
    }
}
