@page "/goto/{transientAccessCode}/{tid}"

@using TCBlazor.Client.Storage
@using TCBlazor.Client.Utils
@using TCalcCore.Auth

@inject EnrichedHttpClient Http
@inject IJSRuntime JS
@inject TCBlazor.Client.Storage.TourcalcLocalStorage ts

@inject NavigationManager NavManager


<h3>Redirecting...</h3>

@code {
    [Parameter]
    public string? transientAccessCode {get; set;}
    [Parameter]
    public string? tid {get; set;}
    protected override async Task OnInitializedAsync()
    {
        var url = "/api/Auth/token/code/" + transientAccessCode;
        var token = await Http.GetStringAsync(url);
        await ts.SetToken(token);
        // now try to get a tour
        var tt = await Http.CallWithAuthToken<Tour>($"/api/Tour/{tid}", token);
        if (tt == null)
        {
            url = $"/api/Auth/token/code/{transientAccessCode}/md5";
            token = await Http.GetStringAsync(url);
            await ts.SetToken(token);
        }
        NavManager.NavigateTo($"/tour/{tid}");
    }
}
