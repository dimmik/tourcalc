@page "/tour/{tourId}/addspending/{*personId}"
@using TCBlazor.Client.Utils
@using TCalc.Domain
@inject HttpClient Http
@inject TCBlazor.Client.Storage.TourcalcLocalStorage tourLocalStorage

<h3>TourAddSpendingPage</h3>
spendings to tour @TourId dfault from person '@PersonId'
@if (tour == null)
{
    <span>Tour loading ...</span>
}
else 
{
<!--
- Form for adding spending with choosing from
- list of spendings, filtered by person and sorted by date desc

-->
<div>Form to add spending
    <input type="text" @bind-value=@(NewSpending.Description)/>
    From: 
    <select id="from" @bind="NewSpending.FromGuid">
        <option value="xxx">yyy</option>
    @foreach (var p in tour.Persons)
    {
        <option value="@p.GUID">@p.Name</option>
    }
    </select>
</div>
<TourSpendingsComponent 
    Tour=@tour 
    SpendingListPreProcessor=@(
        (l) => l
        .Where(s => !s.Planned && (string.IsNullOrWhiteSpace(NewSpending.FromGuid) || s.FromGuid == NewSpending.FromGuid))
        .OrderByDescending(s => s.DateCreated)
    )
    />
}
@code {
    [Parameter]
    public string? TourId { get; set; }
    [Parameter]
    public string? PersonId { get; set; }

    private Spending NewSpending = new Spending();

    public Tour? tour = null;
    protected override async Task OnInitializedAsync()
    {
        var token = await tourLocalStorage.GetToken();
        tour = await Http.GetFromJsonWithAuthToken<Tour>($"/api/Tour/{TourId}/suggested", token);
        if (PersonId != null) NewSpending.FromGuid = PersonId;
    }
}
