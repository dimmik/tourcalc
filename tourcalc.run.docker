FROM mcr.microsoft.com/dotnet/aspnet:5.0 AS base
WORKDIR /app
#RUN dotnet --version
EXPOSE 80
EXPOSE 443


#### build UI
FROM docker.io/library/node:latest AS buildUI
WORKDIR /src
COPY ./TourCalcWebApp ./TourCalcWebApp
RUN ls
WORKDIR /src/TourCalcWebApp
RUN npm install
RUN npm run buildProd
RUN ls -Rla /src/TourCalcWebApp/wwwroot/assets


#### Build and publish backend
FROM mcr.microsoft.com/dotnet/sdk:5.0 AS publishtc
WORKDIR /src
COPY . .
WORKDIR "/src/TourCalcWebApp"
RUN export TZ='Europe/Moscow' && export DT="$(date +"%Y%m%d-%H%M%S")" && dotnet publish --version-suffix $DT "TourCalcWebApp.csproj" -c Release -o /app 

FROM base AS final
WORKDIR /app
COPY --from=publishtc /app .
COPY --from=buildUI /src/TourCalcWebApp/wwwroot/assets /app/wwwroot/assets

# for tourcalc.run.docker only. DO NOT copy to tourcalc.docker (that is basically for build by ci/cd)
# replace buildnum and buildver
RUN export TZ='Europe/Moscow' && export DT="$(date +"%Y%m%d-%H%M%S")" && grep -Irl "#{Build.BuildNumber}#" . | xargs sed -i 's/#{Build.BuildNumber}#/'$DT'/g'
RUN grep -Irl "#{Build.SourceBranch}#" . | xargs sed -i 's/#{Build.SourceBranch}#/local/g'

#RUN ls -Rla /app
ENTRYPOINT ["dotnet", "TourCalcWebApp.dll"]

### README
#build: podman build --build-arg -f tourcalc.run.docker -t tourcalc:dev --no-cache .
#run:   podman run -p 8080:80 -e StorageType=InMemory localhost/tourcalc:dev