FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
#RUN dotnet --version
EXPOSE 80
EXPOSE 443



#### Build and publish backend
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS publishtc
WORKDIR /src
COPY . .
WORKDIR "/src/TCBlazor/Server"
RUN export TZ='Europe/Moscow' && export DT="$(date +"%Y%m%d-%H%M%S")" && dotnet publish --version-suffix $DT "TCBlazor.Server.csproj" -c Release -o /app 

FROM base AS final
WORKDIR /app
COPY --from=publishtc /app .

# for tourcalc.run.docker only. DO NOT copy to tourcalc.docker (that is basically for build by ci/cd)
# replace buildnum and buildver
RUN export TZ='Europe/Moscow' && export DT="$(date +"%Y%m%d-%H%M%S")" && grep -Irl "#{Build.BuildNumber}#" . | xargs sed -i 's/#{Build.BuildNumber}#/'$DT'/g'
RUN grep -Irl "#{Build.SourceBranch}#" . | xargs sed -i 's/#{Build.SourceBranch}#/local/g'

#RUN ls -Rla /app
ENTRYPOINT ["dotnet", "TCBlazor.Server.dll"]

### README
#build:      podman build -f tourcalc.run.docker -t tourcalc:dev --no-cache .
#DEV build:      podman build -f tourcalc.run.docker -t tourcalcdev:dev --no-cache .
#run:        podman run -p 8080:80 -e StorageType=InMemory localhost/tourcalc:dev
#run daemon (detached): podman run -d -p 8080:80 --env-file ~/config/tourcalc.env localhost/tourcalc:dev
#run listening local: podman run -d -p 127.0.0.1:8080:80 --env-file ~/config/tourcalc.env localhost/tourcalc:dev 
#DEV run listening local: podman run -d -p 127.0.0.1:8082:80 --env-file ~/config/tourcalc.env --name tourcalcdev localhost/tourcalcdev:dev 
