FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base
WORKDIR /app
#RUN dotnet --version
EXPOSE 80
EXPOSE 443



#### Build and publish backend
FROM mcr.microsoft.com/dotnet/sdk:6.0 AS publishtc
WORKDIR /src
COPY . .

RUN export TZ='Europe/Moscow' && export DT="$(date +"%Y%m%d-%H%M%S")" && grep -Irl "#{Build.BuildNumber}#" . | xargs sed -i 's/#{Build.BuildNumber}#/'$DT'/g'
RUN grep -Irl "#{Build.SourceBranch}#" . | xargs sed -i 's/#{Build.SourceBranch}#/local/g'

WORKDIR "/src/TCBlazor/Server"
RUN export TZ='Europe/Moscow' && export DT="$(date +"%Y%m%d-%H%M%S")" && dotnet publish --version-suffix $DT "TCBlazor.Server.csproj" -c Release -o /app 


#### build UI
FROM docker.io/library/node:latest AS build-React-UI
WORKDIR /src
COPY ./TourCalcWebApp ./TourCalcWebApp
RUN ls
WORKDIR /src/TourCalcWebApp
RUN npm install
RUN npm run buildProd
RUN ls -Rla /src/TourCalcWebApp/wwwroot/assets

FROM base AS final-blazor
WORKDIR /app
COPY --from=publishtc /app .
RUN rm -rf /app/wwwroot
COPY --from=build-React-UI /src/TourCalcWebApp/wwwroot /app/wwwroot
RUN ls -Rla /app/wwwroot


RUN export TZ='Europe/Moscow' && date +"%Y-%m-%d %H:%M:%S"

#RUN ls -Rla /app
ENTRYPOINT ["dotnet", "TCBlazor.Server.dll"]
